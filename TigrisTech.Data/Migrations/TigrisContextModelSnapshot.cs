// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TigrisTech.Data.Concrete.EntityFramework.Contexts;

namespace TigrisTech.Data.Migrations
{
    [DbContext(typeof(TigrisContext))]
    partial class TigrisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeoTags")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CommentCount = 0,
                            Content = "Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500'lerden beri endüstri standardı sahte metinler olarak kullanılmıştır. Beşyüz yıl boyunca varlığını sürdürmekle kalmamış, aynı zamanda pek değişmeden elektronik dizgiye de sıçramıştır. 1960'larda Lorem Ipsum pasajları da içeren Letraset yapraklarının yayınlanması ile ve yakın zamanda Aldus PageMaker gibi Lorem Ipsum sürümleri içeren masaüstü yayıncılık yazılımları ile popüler olmuştur.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8266),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8025),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8275),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "C# 9.0 ve .NET 5 Yenilikleri",
                            SeoTags = "C#, C# 9, .NET5, .NET Framework, .NET Core",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "C# 9.0 ve .NET 5 Yenilikleri",
                            UserId = 1,
                            ViewsCount = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CommentCount = 0,
                            Content = "Yinelenen bir sayfa içeriğinin okuyucunun dikkatini dağıttığı bilinen bir gerçektir. Lorem Ipsum kullanmanın amacı, sürekli 'buraya metin gelecek, buraya metin gelecek' yazmaya kıyasla daha dengeli bir harf dağılımı sağlayarak okunurluğu artırmasıdır. Şu anda birçok masaüstü yayıncılık paketi ve web sayfa düzenleyicisi, varsayılan mıgır metinler olarak Lorem Ipsum kullanmaktadır. Ayrıca arama motorlarında 'lorem ipsum' anahtar sözcükleri ile arama yapıldığında henüz tasarım aşamasında olan çok sayıda site listelenir. Yıllar içinde, bazen kazara, bazen bilinçli olarak (örneğin mizah katılarak), çeşitli sürümleri geliştirilmiştir.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8683),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8682),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8684),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "C++ 11 ve 19 Yenilikleri",
                            SeoTags = "C++ 11 ve 19 Yenilikleri",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "C++ 11 ve 19 Yenilikleri",
                            UserId = 1,
                            ViewsCount = 295
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CommentCount = 0,
                            Content = "Yaygın inancın tersine, Lorem Ipsum rastgele sözcüklerden oluşmaz. Kökleri M.Ö. 45 tarihinden bu yana klasik Latin edebiyatına kadar uzanan 2000 yıllık bir geçmişi vardır. Virginia'daki Hampden-Sydney College'dan Latince profesörü Richard McClintock, bir Lorem Ipsum pasajında geçen ve anlaşılması en güç sözcüklerden biri olan 'consectetur' sözcüğünün klasik edebiyattaki örneklerini incelediğinde kesin bir kaynağa ulaşmıştır. Lorm Ipsum, Çiçero tarafından M.Ö. 45 tarihinde kaleme alınan \"de Finibus Bonorum et Malorum\" (İyi ve Kötünün Uç Sınırları) eserinin 1.10.32 ve 1.10.33 sayılı bölümlerinden gelmektedir. Bu kitap, ahlak kuramı üzerine bir tezdir ve Rönesans döneminde çok popüler olmuştur. Lorem Ipsum pasajının ilk satırı olan \"Lorem ipsum dolor sit amet\" 1.10.32 sayılı bölümdeki bir satırdan gelmektedir. 1500'lerden beri kullanılmakta olan standard Lorem Ipsum metinleri ilgilenenler için yeniden üretilmiştir. Çiçero tarafından yazılan 1.10.32 ve 1.10.33 bölümleri de 1914 H. Rackham çevirisinden alınan İngilizce sürümleri eşliğinde özgün biçiminden yeniden üretilmiştir.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8689),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8688),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8690),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "JavaScript ES2019 ve ES2020 Yenilikleri",
                            SeoTags = "JavaScript ES2019 ve ES2020 Yenilikleri",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "JavaScript ES2019 ve ES2020 Yenilikleri",
                            UserId = 1,
                            ViewsCount = 12
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CommentCount = 0,
                            Content = "É um facto estabelecido de que um leitor é distraído pelo conteúdo legível de uma página quando analisa a sua mancha gráfica. Logo, o uso de Lorem Ipsum leva a uma distribuição mais ou menos normal de letras, ao contrário do uso de 'Conteúdo aqui,conteúdo aqui'', tornando-o texto legível. Muitas ferramentas de publicação electrónica e editores de páginas web usam actualmente o Lorem Ipsum como o modelo de texto usado por omissão, e uma pesquisa por 'lorem ipsum' irá encontrar muitos websites ainda na sua infância. Várias versões têm evoluído ao longo dos anos, por vezes por acidente, por vezes propositadamente (como no caso do humor).",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8695),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8693),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8696),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Typescript 4.1, Typescript, TYPESCRIPT 2021",
                            SeoTags = "Typescript 4.1 Güncellemeleri",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Typescript 4.1",
                            UserId = 1,
                            ViewsCount = 666
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CommentCount = 0,
                            Content = "Yaygın inancın tersine, Lorem Ipsum rastgele sözcüklerden oluşmaz. Kökleri M.Ö. 45 tarihinden bu yana klasik Latin edebiyatına kadar uzanan 2000 yıllık bir geçmişi vardır. Virginia'daki Hampden-Sydney College'dan Latince profesörü Richard McClintock, bir Lorem Ipsum pasajında geçen ve anlaşılması en güç sözcüklerden biri olan 'consectetur' sözcüğünün klasik edebiyattaki örneklerini incelediğinde kesin bir kaynağa ulaşmıştır. Lorm Ipsum, Çiçero tarafından M.Ö. 45 tarihinde kaleme alınan \"de Finibus Bonorum et Malorum\" (İyi ve Kötünün Uç Sınırları) eserinin 1.10.32 ve 1.10.33 sayılı bölümlerinden gelmektedir. Bu kitap, ahlak kuramı üzerine bir tezdir ve Rönesans döneminde çok popüler olmuştur. Lorem Ipsum pasajının ilk satırı olan \"Lorem ipsum dolor sit amet\" 1.10.32 sayılı bölümdeki bir satırdan gelmektedir. 1500'lerden beri kullanılmakta olan standard Lorem Ipsum metinleri ilgilenenler için yeniden üretilmiştir. Çiçero tarafından yazılan 1.10.32 ve 1.10.33 bölümleri de 1914 H. Rackham çevirisinden alınan İngilizce sürümleri eşliğinde özgün biçiminden yeniden üretilmiştir.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8700),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8699),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8701),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Java, Android, Mobile, Kotlin, Uygulama Geliştirme",
                            SeoTags = "Java, Mobil, Kotlin, Android, IOS, SWIFT",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Java ve Android'in Geleceği | 2021",
                            UserId = 1,
                            ViewsCount = 3225
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CommentCount = 0,
                            Content = "Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte. Il n'a pas fait que survivre cinq siècles, mais s'est aussi adapté à la bureautique informatique, sans que son contenu n'en soit modifié. Il a été popularisé dans les années 1960 grâce à la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus récemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8706),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8705),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8707),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Python ile Veri Madenciliği",
                            SeoTags = "Python, Veri Madenciliği Nasıl Yapılır?",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Python ile Veri Madenciliği | 2021",
                            UserId = 1,
                            ViewsCount = 9999
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CommentCount = 0,
                            Content = "Contrairement à une opinion répandue, le Lorem Ipsum n'est pas simplement du texte aléatoire. Il trouve ses racines dans une oeuvre de la littérature latine classique datant de 45 av. J.-C., le rendant vieux de 2000 ans. Un professeur du Hampden-Sydney College, en Virginie, s'est intéressé à un des mots latins les plus obscurs, consectetur, extrait d'un passage du Lorem Ipsum, et en étudiant tous les usages de ce mot dans la littérature classique, découvrit la source incontestable du Lorem Ipsum. Il provient en fait des sections 1.10.32 et 1.10.33 du 0De Finibus Bonorum et Malorum' (Des Suprêmes Biens et des Suprêmes Maux) de Cicéron. Cet ouvrage, très populaire pendant la Renaissance, est un traité sur la théorie de l'éthique. Les premières lignes du Lorem Ipsum, 'Lorem ipsum dolor sit amet...'', proviennent de la section 1.10.32",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8712),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8710),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8713),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Php ile API Oluşturma Rehberi",
                            SeoTags = "php, laravel, api, oop",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Php Laravel Başlangıç Rehberi | API",
                            UserId = 1,
                            ViewsCount = 4818
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CommentCount = 0,
                            Content = "Plusieurs variations de Lorem Ipsum peuvent être trouvées ici ou là, mais la majeure partie d'entre elles a été altérée par l'addition d'humour ou de mots aléatoires qui ne ressemblent pas une seconde à du texte standard. Si vous voulez utiliser un passage du Lorem Ipsum, vous devez être sûr qu'il n'y a rien d'embarrassant caché dans le texte. Tous les générateurs de Lorem Ipsum sur Internet tendent à reproduire le même extrait sans fin, ce qui fait de lipsum.com le seul vrai générateur de Lorem Ipsum. Iil utilise un dictionnaire de plus de 200 mots latins, en combinaison de plusieurs structures de phrases, pour générer un Lorem Ipsum irréprochable. Le Lorem Ipsum ainsi obtenu ne contient aucune répétition, ni ne contient des mots farfelus, ou des touches d'humour.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8718),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8716),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8718),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Kotlin ile Mobil Programlama Baştan Sona Adım Adım",
                            SeoTags = "kotlin, android, mobil, programlama",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Kotlin ile Mobil Programlama",
                            UserId = 1,
                            ViewsCount = 750
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CommentCount = 0,
                            Content = "Al contrario di quanto si pensi, Lorem Ipsum non è semplicemente una sequenza casuale di caratteri. Risale ad un classico della letteratura latina del 45 AC, cosa che lo rende vecchio di 2000 anni. Richard McClintock, professore di latino al Hampden-Sydney College in Virginia, ha ricercato una delle più oscure parole latine, consectetur, da un passaggio del Lorem Ipsum e ha scoperto tra i vari testi in cui è citata, la fonte da cui è tratto il testo, le sezioni 1.10.32 and 1.10.33 del 'de Finibus Bonorum et Malorum' di Cicerone. Questo testo è un trattato su teorie di etica, molto popolare nel Rinascimento. La prima riga del Lorem Ipsum, 'Lorem ipsum dolor sit amet..'', è tratta da un passaggio della sezione 1.10.32.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8726),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8725),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8727),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Swift ile IOS Mobil Programlama Baştan Sona Adım Adım",
                            SeoTags = "IOS, android, mobil, programlama",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Swift ile IOS Programlama",
                            UserId = 1,
                            ViewsCount = 14900
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CommentCount = 0,
                            Content = "Esistono innumerevoli variazioni dei passaggi del Lorem Ipsum, ma la maggior parte hanno subito delle variazioni del tempo, a causa dell’inserimento di passaggi ironici, o di sequenze casuali di caratteri palesemente poco verosimili. Se si decide di utilizzare un passaggio del Lorem Ipsum, è bene essere certi che non contenga nulla di imbarazzante. In genere, i generatori di testo segnaposto disponibili su internet tendono a ripetere paragrafi predefiniti, rendendo questo il primo vero generatore automatico su intenet. Infatti utilizza un dizionario di oltre 200 vocaboli latini, combinati con un insieme di modelli di strutture di periodi, per generare passaggi di testo verosimili. Il testo così generato è sempre privo di ripetizioni, parole imbarazzanti o fuori luogo ecc.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8731),
                            Date = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8730),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 425, DateTimeKind.Local).AddTicks(8732),
                            SeoAuthor = "Hakim Kaya",
                            SeoDescription = "Ruby, Ruby on Rails Web Programlama, AirBnb Klon",
                            SeoTags = "Ruby on Rails, Ruby, Web Programlama, AirBnb",
                            Thumbnail = "postImages/defaultThumbnail.jpg",
                            Title = "Ruby on Rails ile AirBnb Klon Kodlayalım",
                            UserId = 1,
                            ViewsCount = 26777
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3921),
                            Description = "C# Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3931),
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3943),
                            Description = "C++ Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3944),
                            Name = "C++"
                        },
                        new
                        {
                            Id = 3,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3948),
                            Description = "JavaScript Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3949),
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 4,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3954),
                            Description = "Typescript Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3955),
                            Name = "Typescript"
                        },
                        new
                        {
                            Id = 5,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3961),
                            Description = "Java Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3961),
                            Name = "Java"
                        },
                        new
                        {
                            Id = 6,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3965),
                            Description = "Python Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3966),
                            Name = "Python"
                        },
                        new
                        {
                            Id = 7,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3969),
                            Description = "Php Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(3971),
                            Name = "Php"
                        },
                        new
                        {
                            Id = 8,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4001),
                            Description = "Kotlin Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4002),
                            Name = "Kotlin"
                        },
                        new
                        {
                            Id = 9,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4005),
                            Description = "Swift Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4006),
                            Name = "Swift"
                        },
                        new
                        {
                            Id = 10,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4009),
                            Description = "Ruby Programlama Dili ile İlgili En Güncel Bilgiler",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 427, DateTimeKind.Local).AddTicks(4010),
                            Name = "Ruby"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(68),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(76),
                            Text = "Lorem Ipsum pasajlarının birçok çeşitlemesi vardır. Ancak bunların büyük bir çoğunluğu mizah katılarak veya rastgele sözcükler eklenerek değiştirilmişlerdir. Eğer bir Lorem Ipsum pasajı kullanacaksanız, metin aralarına utandırıcı sözcükler gizlenmediğinden emin olmanız gerekir. İnternet'teki tüm Lorem Ipsum üreteçleri önceden belirlenmiş metin bloklarını yineler. Bu da, bu üreteci İnternet üzerindeki gerçek Lorem Ipsum üreteci yapar. Bu üreteç, 200'den fazla Latince sözcük ve onlara ait cümle yapılarını içeren bir sözlük kullanır. Bu nedenle, üretilen Lorem Ipsum metinleri yinelemelerden, mizahtan ve karakteristik olmayan sözcüklerden uzaktır."
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(83),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(84),
                            Text = "Lorem Ipsum jest tekstem stosowanym jako przykładowy wypełniacz w przemyśle poligraficznym. Został po raz pierwszy użyty w XV w. przez nieznanego drukarza do wypełnienia tekstem próbnej książki. Pięć wieków później zaczął być używany przemyśle elektronicznym, pozostając praktycznie niezmienionym. Spopularyzował się w latach 60. XX w. wraz z publikacją arkuszy Letrasetu, zawierających fragmenty Lorem Ipsum, a ostatnio z zawierającym różne wersje Lorem Ipsum oprogramowaniem przeznaczonym do realizacji druków na komputerach osobistych, jak Aldus PageMaker"
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 3,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(87),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(88),
                            Text = "Ang Lorem Ipsum ay ginagamit na modelo ng industriya ng pagpriprint at pagtytypeset. Ang Lorem Ipsum ang naging regular na modelo simula pa noong 1500s, noong may isang di kilalang manlilimbag and kumuha ng galley ng type at ginulo ang pagkaka-ayos nito upang makagawa ng libro ng mga type specimen. Nalagpasan nito hindi lang limang siglo, kundi nalagpasan din nito ang paglaganap ng electronic typesetting at nanatiling parehas. Sumikat ito noong 1960s kasabay ng pag labas ng Letraset sheets na mayroong mga talata ng Lorem Ipsum, at kamakailan lang sa mga desktop publishing software tulad ng Aldus Pagemaker ginamit ang mga bersyon ng Lorem Ipsum."
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 4,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(91),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(92),
                            Text = "Lorem Ipsum er rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum har vært bransjens standard for dummytekst helt siden 1500-tallet, da en ukjent boktrykker stokket en mengde bokstaver for å lage et prøveeksemplar av en bok. Lorem Ipsum har tålt tidens tann usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer også tålt spranget over til elektronisk typografi uten vesentlige endringer. Lorem Ipsum ble gjort allment kjent i 1960-årene ved lanseringen av Letraset-ark med avsnitt fra Lorem Ipsum, og senere med sideombrekkingsprogrammet Aldus PageMaker som tok i bruk nettopp Lorem Ipsum for dummytekst."
                        },
                        new
                        {
                            Id = 5,
                            ArticleId = 5,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(94),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(95),
                            Text = "Lorem Ipsum este pur şi simplu o machetă pentru text a industriei tipografice. Lorem Ipsum a fost macheta standard a industriei încă din secolul al XVI-lea, când un tipograf anonim a luat o planşetă de litere şi le-a amestecat pentru a crea o carte demonstrativă pentru literele respective. Nu doar că a supravieţuit timp de cinci secole, dar şi a facut saltul în tipografia electronică practic neschimbată. A fost popularizată în anii '60 odată cu ieşirea colilor Letraset care conţineau pasaje Lorem Ipsum, iar mai recent, prin programele de publicare pentru calculator, ca Aldus PageMaker care includeau versiuni de Lorem Ipsum."
                        },
                        new
                        {
                            Id = 6,
                            ArticleId = 6,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(98),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(99),
                            Text = "Lorem Ipsum je jednostavno probni tekst koji se koristi u tiskarskoj i slovoslagarskoj industriji. Lorem Ipsum postoji kao industrijski standard još od 16-og stoljeća, kada je nepoznati tiskar uzeo tiskarsku galiju slova i posložio ih da bi napravio knjigu s uzorkom tiska. Taj je tekst ne samo preživio pet stoljeća, već se i vinuo u svijet elektronskog slovoslagarstva, ostajući u suštini nepromijenjen. Postao je popularan tijekom 1960-ih s pojavom Letraset listova s odlomcima Lorem Ipsum-a, a u skorije vrijeme sa software-om za stolno izdavaštvo kao što je Aldus PageMaker koji također sadrži varijante Lorem Ipsum-a."
                        },
                        new
                        {
                            Id = 7,
                            ArticleId = 7,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(102),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(103),
                            Text = "Lorem Ipsum – tas ir teksta salikums, kuru izmanto poligrāfijā un maketēšanas darbos. Lorem Ipsum ir kļuvis par vispārpieņemtu teksta aizvietotāju kopš 16. gadsimta sākuma. Tajā laikā kāds nezināms iespiedējs izveidoja teksta fragmentu, lai nodrukātu grāmatu ar burtu paraugiem. Tas ir ne tikai pārdzīvojis piecus gadsimtus, bet bez ievērojamām izmaiņām saglabājies arī mūsdienās, pārejot uz datorizētu teksta apstrādi. Tā popularizēšanai 60-tajos gados kalpoja Letraset burtu paraugu publicēšana ar Lorem Ipsum teksta fragmentiem un, nesenā pagātnē, tādas maketēšanas programmas kā Aldus PageMaker, kuras šablonu paraugos ir izmantots Lorem Ipsum teksts."
                        },
                        new
                        {
                            Id = 8,
                            ArticleId = 8,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(107),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(108),
                            Text = "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like)."
                        },
                        new
                        {
                            Id = 9,
                            ArticleId = 9,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(111),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(112),
                            Text = "هنالك العديد من الأنواع المتوفرة لنصوص لوريم إيبسوم، ولكن الغالبية تم تعديلها بشكل ما عبر إدخال بعض النوادر أو الكلمات العشوائية إلى النص. إن كنت تريد أن تستخدم نص لوريم إيبسوم ما، عليك أن تتحقق أولاً أن ليس هناك أي كلمات أو عبارات محرجة أو غير لائقة مخبأة في هذا النص. بينما تعمل جميع مولّدات نصوص لوريم إيبسوم على الإنترنت على إعادة تكرار مقاطع من نص لوريم إيبسوم نفسه عدة مرات بما تتطلبه الحاجة، يقوم مولّدنا هذا باستخدام كلمات من قاموس يحوي على أكثر من 200 كلمة لا تينية، مضاف إليها مجموعة من الجمل النموذجية، لتكوين نص لوريم إيبسوم ذو شكل منطقي قريب إلى النص الحقيقي. وبالتالي يكون النص الناتح خالي من التكرار، أو أي كلمات أو عبارات غير لائقة أو ما شابه. وهذا ما يجعله أول مولّد نص لوريم إيبسوم حقيقي على الإنترنت."
                        },
                        new
                        {
                            Id = 10,
                            ArticleId = 10,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(115),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 429, DateTimeKind.Local).AddTicks(116),
                            Text = "Lorem Ipsum，也称乱数假文或者哑元文本， 是印刷及排版领域所常用的虚拟文字。由于曾经一台匿名的打印机刻意打乱了一盒印刷字体从而造出一本字体样品书，Lorem Ipsum从西元15世纪起就被作为此领域的标准文本使用。它不仅延续了五个世纪，还通过了电子排版的挑战，其雏形却依然保存至今。在1960年代，”Leatraset”公司发布了印刷着Lorem Ipsum段落的纸张，从而广泛普及了它的使用。最近，计算机桌面出版软件”Aldus PageMaker”也通过同样的方式使Lorem Ipsum落入大众的视野。"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Editor.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Test")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Editor.Galery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Galeries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5024),
                            Description = "Diş Hastanemiz Lab kısmı",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5365),
                            Picture = "/galeryImages/defaultGalery.jpg",
                            Title = "Galery  1"
                        },
                        new
                        {
                            Id = 2,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5526),
                            Description = "Diş Hastanemiz bekleme kısmı",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5527),
                            Picture = "/galeryImages/defaultGalery.jpg",
                            Title = "Galery  2"
                        },
                        new
                        {
                            Id = 3,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5531),
                            Description = "Diş Hastanemiz tedavi bölümü",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 418, DateTimeKind.Local).AddTicks(5532),
                            Picture = "/galeryImages/defaultGalery.jpg",
                            Title = "Galery  3"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Editor.Profil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FacebookLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GitHubLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InstagramLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LinkedInLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TcNo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TwitterLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WebsiteLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("YoutubeLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Profils");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Gül Tepe Mah.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5890),
                            Email = "dtEmin@gmail.com",
                            FacebookLink = "https://facebook.com/alikara",
                            FirstName = "Emin",
                            GitHubLink = "https://github.com/alikara",
                            InstagramLink = "https://instagram.com/alikara",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kara",
                            LinkedInLink = "https://linkedin.com/alikara",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5900),
                            Phone = "+905555555555",
                            Picture = "/profilImages/defaultProfil.jpg",
                            TcNo = "11111111111",
                            TwitterLink = "https://twitter.com/alikara",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/alikara"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Gül Tepe Mah.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5911),
                            Email = "nurcan@gmail.com",
                            FacebookLink = "https://facebook.com/fatmagunus",
                            FirstName = "Nurcan",
                            GitHubLink = "https://github.com/fatmagunus",
                            InstagramLink = "https://instagram.com/fatmagunus",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Güneş",
                            LinkedInLink = "https://linkedin.com/fatmagunus",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5912),
                            Phone = "+905555555555",
                            Picture = "/profilImages/defaultProfil.jpg",
                            TcNo = "11111111111",
                            TwitterLink = "https://twitter.com/fatmagunus",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/fatmagunus"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Gül Tepe Mah.",
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5916),
                            Email = "Aslı@gmail.com",
                            FacebookLink = "https://facebook.com/fatmagunus",
                            FirstName = "Aslı",
                            GitHubLink = "https://github.com/fatmagunus",
                            InstagramLink = "https://instagram.com/fatmagunus",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Tekin",
                            LinkedInLink = "https://linkedin.com/fatmagunus",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 420, DateTimeKind.Local).AddTicks(5917),
                            Phone = "+905555555555",
                            Picture = "/profilImages/defaultProfil.jpg",
                            TcNo = "11111111111",
                            TwitterLink = "https://twitter.com/fatmagunus",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/fatmagunus"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Editor.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Sldiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7770),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7780),
                            Picture = "/sliderImages/defaultSlider.jpg",
                            Title = "Diş  Temizleme"
                        },
                        new
                        {
                            Id = 2,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7787),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7788),
                            Title = "Diş  İplant"
                        },
                        new
                        {
                            Id = 3,
                            CreateByName = "InitialCreate",
                            CreateDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7791),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2024, 3, 21, 15, 48, 25, 421, DateTimeKind.Local).AddTicks(7792),
                            Title = "Diş  Zirkonyum"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Callsite")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Exception")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logger")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "af0eeddf-abc2-4c1f-b153-9c280ee7ee02",
                            Name = "Category.Create",
                            NormalizedName = "CATEGORY.CREATE"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "85e8d92e-acde-4cb6-bf03-8e0e958344f8",
                            Name = "Category.Read",
                            NormalizedName = "CATEGORY.READ"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "fd79c0f4-735d-45ac-93ab-cb4bd121c037",
                            Name = "Category.Update",
                            NormalizedName = "CATEGORY.UPDATE"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = "301eeeaf-76cf-4929-a58e-bc6f3a0cdb2c",
                            Name = "Category.Delete",
                            NormalizedName = "CATEGORY.DELETE"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = "82555312-16d0-435e-a39d-b1b698ee47ce",
                            Name = "Article.Create",
                            NormalizedName = "ARTICLE.CREATE"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = "1b3787ec-7c74-4177-a468-567a1d6e5889",
                            Name = "Article.Read",
                            NormalizedName = "ARTICLE.READ"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = "54cdb713-ca8e-4318-a360-b74452bed84e",
                            Name = "Article.Update",
                            NormalizedName = "ARTICLE.UPDATE"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = "02ef514d-56e3-41f6-a3e4-24a81ede4a5b",
                            Name = "Article.Delete",
                            NormalizedName = "ARTICLE.DELETE"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = "ec69d230-b3a8-4a6c-bed3-7aed6aa2c29b",
                            Name = "User.Create",
                            NormalizedName = "USER.CREATE"
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = "fcf767d9-e28f-4ba1-8259-ce8cd60d90ca",
                            Name = "User.Read",
                            NormalizedName = "USER.READ"
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = "60c71d3a-cc63-45b5-96dd-434478ed03db",
                            Name = "User.Update",
                            NormalizedName = "USER.UPDATE"
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = "8e0feeb3-1355-4c90-bd75-7914cb97ff1f",
                            Name = "User.Delete",
                            NormalizedName = "USER.DELETE"
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = "445ebd7c-169b-4c9f-954c-6c766e527672",
                            Name = "Role.Create",
                            NormalizedName = "ROLE.CREATE"
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = "32bfa3bb-d388-4d84-b0f4-14e5258463c3",
                            Name = "Role.Read",
                            NormalizedName = "ROLE.READ"
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = "ef2b9042-da14-449d-8351-cd827a3c0dc7",
                            Name = "Role.Update",
                            NormalizedName = "ROLE.UPDATE"
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = "6c29afee-a274-4744-8c7a-471069656653",
                            Name = "Role.Delete",
                            NormalizedName = "ROLE.DELETE"
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = "72452279-ef17-428f-884d-bd0f28c39471",
                            Name = "Comment.Create",
                            NormalizedName = "COMMENT.CREATE"
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = "c4a5f23a-f18e-4a89-8a7a-a13e8f761af7",
                            Name = "Comment.Read",
                            NormalizedName = "COMMENT.READ"
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = "70b48ee5-5c0d-4c5f-8cfe-71c7883c6828",
                            Name = "Comment.Update",
                            NormalizedName = "COMMENT.UPDATE"
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = "4d5cc254-1612-441b-84f8-bdcfd61790bb",
                            Name = "Comment.Delete",
                            NormalizedName = "COMMENT.DELETE"
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = "f3326944-aeed-406e-8aea-c2dcc3a9d3c7",
                            Name = "AdminArea.Home.Read",
                            NormalizedName = "ADMINAREA.HOME.READ"
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = "785ae55a-6ed3-463b-b2ae-ed0920af8e37",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = "ab5b4986-c0cf-411b-a27c-88f07a1c3d2d",
                            Name = "Profil.Read",
                            NormalizedName = "PROFIL.READ"
                        },
                        new
                        {
                            Id = 24,
                            ConcurrencyStamp = "1c63e6d2-91d4-410d-b218-b39668b7e8c0",
                            Name = "Profil.Create",
                            NormalizedName = "PROFIL.CREATE"
                        },
                        new
                        {
                            Id = 25,
                            ConcurrencyStamp = "0fed2810-86da-4d82-aa12-6cc75eec82b0",
                            Name = "Profil.Update",
                            NormalizedName = "PROFIL.UPDATE"
                        },
                        new
                        {
                            Id = 26,
                            ConcurrencyStamp = "0940d326-3248-4ef2-809e-84361e5ab11f",
                            Name = "Profil.Delete",
                            NormalizedName = "PROFIL.DELETE"
                        },
                        new
                        {
                            Id = 27,
                            ConcurrencyStamp = "669e251a-2361-4a3c-b71b-48925acd16f0",
                            Name = "Slider.Read",
                            NormalizedName = "SLIDER.READ"
                        },
                        new
                        {
                            Id = 28,
                            ConcurrencyStamp = "cb17a40a-ce44-4141-bbc0-da3d558328f9",
                            Name = "Slider.Create",
                            NormalizedName = "SLIDER.CREATE"
                        },
                        new
                        {
                            Id = 29,
                            ConcurrencyStamp = "15cae723-93f4-465b-8ac3-0f5cc173fa10",
                            Name = "Slider.Update",
                            NormalizedName = "SLIDER.UPDATE"
                        },
                        new
                        {
                            Id = 30,
                            ConcurrencyStamp = "02ca0673-5ff6-4c19-b8e1-fd0e6761f79b",
                            Name = "Slider.Delete",
                            NormalizedName = "SLIDER.DELETE"
                        },
                        new
                        {
                            Id = 31,
                            ConcurrencyStamp = "7095a19d-5c54-4988-9bcf-5b93a9bbad58",
                            Name = "Galery.Read",
                            NormalizedName = "GALERY.READ"
                        },
                        new
                        {
                            Id = 32,
                            ConcurrencyStamp = "529ca023-7cb1-41d8-a47e-6e529421294f",
                            Name = "Galery.Create",
                            NormalizedName = "GALERY.CREATE"
                        },
                        new
                        {
                            Id = 33,
                            ConcurrencyStamp = "d4ae5a41-b64b-4404-b0b6-6313b85574f0",
                            Name = "Galery.Update",
                            NormalizedName = "GALERY.UPDATE"
                        },
                        new
                        {
                            Id = 34,
                            ConcurrencyStamp = "bf95c0e6-225d-42da-a9e2-521f3aaf40a3",
                            Name = "Galery.Delete",
                            NormalizedName = "GALERY.DELETE"
                        },
                        new
                        {
                            Id = 35,
                            ConcurrencyStamp = "4905e702-084d-4449-8738-221c8cb2c628",
                            Name = "AccountCode.Read",
                            NormalizedName = "ACCOUNTCODE.READ"
                        },
                        new
                        {
                            Id = 36,
                            ConcurrencyStamp = "f16dd752-7556-43a7-a1c8-dc2cc2938a9b",
                            Name = "AccountCode.Create",
                            NormalizedName = "ACCOUNTCODE.CREATE"
                        },
                        new
                        {
                            Id = 37,
                            ConcurrencyStamp = "ef5f26c1-00c6-4bff-8663-8267e8166f8c",
                            Name = "AccountCode.Update",
                            NormalizedName = "ACCOUNTCODE.UPDATE"
                        },
                        new
                        {
                            Id = 38,
                            ConcurrencyStamp = "fb41a9cb-2c3f-4c05-8244-21ca104a9246",
                            Name = "AccountCode.Delete",
                            NormalizedName = "ACCOUNTCODE.DELETE"
                        },
                        new
                        {
                            Id = 39,
                            ConcurrencyStamp = "43d7e1f2-ca45-4155-a74d-96f1c03011c8",
                            Name = "Appointment.Read",
                            NormalizedName = "APPOINTMENT.READ"
                        },
                        new
                        {
                            Id = 40,
                            ConcurrencyStamp = "718f9ddc-ac80-49e1-ac01-a40aa27611fb",
                            Name = "Appointment.Create",
                            NormalizedName = "APPOINTMENT.CREATE"
                        },
                        new
                        {
                            Id = 41,
                            ConcurrencyStamp = "b68fbdb2-c045-4792-bd5d-e9b84d66fb71",
                            Name = "Appointment.Update",
                            NormalizedName = "APPOINTMENT.UPDATE"
                        },
                        new
                        {
                            Id = 42,
                            ConcurrencyStamp = "78cb4c1c-6680-45d6-a0dd-9600f40fd0b7",
                            Name = "Appointment.Delete",
                            NormalizedName = "APPOINTMENT.DELETE"
                        },
                        new
                        {
                            Id = 43,
                            ConcurrencyStamp = "e54ea92d-1ac6-45f1-ab77-169db39617fa",
                            Name = "AppointmentState.Read",
                            NormalizedName = "APPOINTMENTSTATE.READ"
                        },
                        new
                        {
                            Id = 44,
                            ConcurrencyStamp = "81dfc2ae-8059-4bfa-bdf5-1a75f82a26b5",
                            Name = "AppointmentState.Create",
                            NormalizedName = "APPOINTMENTSTATE.CREATE"
                        },
                        new
                        {
                            Id = 45,
                            ConcurrencyStamp = "3cb05a4a-a62b-4643-afaa-a0c56aa02316",
                            Name = "AppointmentState.Update",
                            NormalizedName = "APPOINTMENTSTATE.UPDATE"
                        },
                        new
                        {
                            Id = 46,
                            ConcurrencyStamp = "5d569a74-edaf-4fc8-98a3-745dd41b322f",
                            Name = "AppointmentState.Delete",
                            NormalizedName = "APPOINTMENTSTATE.DELETE"
                        },
                        new
                        {
                            Id = 47,
                            ConcurrencyStamp = "cb56f688-d2b7-481a-8027-3af730c47d47",
                            Name = "ExpendeInCome.Read",
                            NormalizedName = "EXPENDEINCOME.READ"
                        },
                        new
                        {
                            Id = 48,
                            ConcurrencyStamp = "9d0df68d-ea63-4fcf-8bb1-33c9bcdca727",
                            Name = "ExpendeInCome.Create",
                            NormalizedName = "EXPENDEINCOME.CREATE"
                        },
                        new
                        {
                            Id = 49,
                            ConcurrencyStamp = "7587b482-d847-4f1e-8367-d6f6ef1f8772",
                            Name = "ExpendeInCome.Update",
                            NormalizedName = "EXPENDEINCOME.UPDATE"
                        },
                        new
                        {
                            Id = 50,
                            ConcurrencyStamp = "0ae42c82-de6c-42fe-8d87-d4baca692987",
                            Name = "ExpendeInCome.Delete",
                            NormalizedName = "EXPENDEINCOME.DELETE"
                        },
                        new
                        {
                            Id = 51,
                            ConcurrencyStamp = "4effe8dd-5b2c-4d26-9891-0de29fe44775",
                            Name = "PaymentMove.Read",
                            NormalizedName = "PAYMENTMOVE.READ"
                        },
                        new
                        {
                            Id = 52,
                            ConcurrencyStamp = "7f514e2a-76e3-4ba4-8779-4d9fab9b1c42",
                            Name = "PaymentMove.Create",
                            NormalizedName = "PAYMENTMOVE.CREATE"
                        },
                        new
                        {
                            Id = 53,
                            ConcurrencyStamp = "0e52dc77-d97d-480f-8564-1ad5e7ae732e",
                            Name = "PaymentMove.Update",
                            NormalizedName = "PAYMENTMOVE.UPDATE"
                        },
                        new
                        {
                            Id = 54,
                            ConcurrencyStamp = "3d529e1b-3a82-4906-b033-dbd643f144e6",
                            Name = "PaymentMove.Delete",
                            NormalizedName = "PAYMENTMOVE.DELETE"
                        },
                        new
                        {
                            Id = 55,
                            ConcurrencyStamp = "edc5e6d0-21e7-4aef-b70f-9a17b9cb9873",
                            Name = "PaymentType.Read",
                            NormalizedName = "PAYMENTTYPE.READ"
                        },
                        new
                        {
                            Id = 56,
                            ConcurrencyStamp = "6167ea96-8c37-46bb-85b3-83b40c9f8043",
                            Name = "PaymentType.Create",
                            NormalizedName = "PAYMENTTYPE.CREATE"
                        },
                        new
                        {
                            Id = 57,
                            ConcurrencyStamp = "efda924c-5daa-49fc-9555-2d0aaa2007e8",
                            Name = "PaymentType.Update",
                            NormalizedName = "PAYMENTTYPE.UPDATE"
                        },
                        new
                        {
                            Id = 58,
                            ConcurrencyStamp = "713e1372-a086-4134-9f5d-64093c6b063f",
                            Name = "PaymentType.Delete",
                            NormalizedName = "PAYMENTTYPE.DELETE"
                        },
                        new
                        {
                            Id = 59,
                            ConcurrencyStamp = "7dd2a6dd-224c-48d7-97d5-764550f4a7bc",
                            Name = "Photo.Read",
                            NormalizedName = "PHOTO.READ"
                        },
                        new
                        {
                            Id = 60,
                            ConcurrencyStamp = "7866f4e2-01ca-4803-974a-d0f04c98af19",
                            Name = "Photo.Create",
                            NormalizedName = "PHOTO.CREATE"
                        },
                        new
                        {
                            Id = 61,
                            ConcurrencyStamp = "76625c5d-3c5e-41a0-8a7c-c47b0b41a042",
                            Name = "Photo.Update",
                            NormalizedName = "PHOTO.UPDATE"
                        },
                        new
                        {
                            Id = 62,
                            ConcurrencyStamp = "1db0a7a0-20b5-4172-b4b9-7f6a4da6459e",
                            Name = "Photo.Delete",
                            NormalizedName = "PHOTO.DELETE"
                        },
                        new
                        {
                            Id = 63,
                            ConcurrencyStamp = "7fd51edb-e97c-4376-8eeb-00326e74483f",
                            Name = "Safe.Read",
                            NormalizedName = "SAFE.READ"
                        },
                        new
                        {
                            Id = 64,
                            ConcurrencyStamp = "d00ac323-02c0-4617-9e79-5e61fe82a482",
                            Name = "Safe.Create",
                            NormalizedName = "SAFE.CREATE"
                        },
                        new
                        {
                            Id = 65,
                            ConcurrencyStamp = "7ef2a9d6-7e14-4fe0-80cb-07c9b1ca7290",
                            Name = "Safe.Update",
                            NormalizedName = "SAFE.UPDATE"
                        },
                        new
                        {
                            Id = 66,
                            ConcurrencyStamp = "93e88551-c2eb-4b37-ad64-c8ffe0c50cb5",
                            Name = "Safe.Delete",
                            NormalizedName = "SAFE.DELETE"
                        },
                        new
                        {
                            Id = 67,
                            ConcurrencyStamp = "daeb2aed-cb61-4ec0-8161-3d6396247b24",
                            Name = "Tooth.Read",
                            NormalizedName = "TOOTH.READ"
                        },
                        new
                        {
                            Id = 68,
                            ConcurrencyStamp = "438f92c6-c72c-46fb-8942-dd81910688b4",
                            Name = "Tooth.Create",
                            NormalizedName = "TOOTH.CREATE"
                        },
                        new
                        {
                            Id = 69,
                            ConcurrencyStamp = "bb51e8e8-f413-4356-a5f6-012f41e584dc",
                            Name = "Tooth.Update",
                            NormalizedName = "TOOTH.UPDATE"
                        },
                        new
                        {
                            Id = 70,
                            ConcurrencyStamp = "48029fe2-5522-40a7-b3f2-33da69332207",
                            Name = "Tooth.Delete",
                            NormalizedName = "TOOTH.DELETE"
                        },
                        new
                        {
                            Id = 71,
                            ConcurrencyStamp = "80c09b26-7fd8-450e-a9fc-3ee6cfc98552",
                            Name = "TreatmentLower.Read",
                            NormalizedName = "TREATMENTLOWER.READ"
                        },
                        new
                        {
                            Id = 72,
                            ConcurrencyStamp = "6fedc064-49ee-46f6-a94c-e30ab9e6e131",
                            Name = "TreatmentLower.Create",
                            NormalizedName = "TREATMENTLOWER.CREATE"
                        },
                        new
                        {
                            Id = 73,
                            ConcurrencyStamp = "91d20417-7473-48f8-8344-9b3674d5c147",
                            Name = "TreatmentLower.Update",
                            NormalizedName = "TREATMENTLOWER.UPDATE"
                        },
                        new
                        {
                            Id = 74,
                            ConcurrencyStamp = "276e07d1-9340-4816-9e94-4d53bc9b1ba8",
                            Name = "TreatmentLower.Delete",
                            NormalizedName = "TREATMENTLOWER.DELETE"
                        },
                        new
                        {
                            Id = 75,
                            ConcurrencyStamp = "1b66ed64-4aa2-4b4c-a3f4-cec7b16d67e9",
                            Name = "Treatment.Read",
                            NormalizedName = "TREATMENT.READ"
                        },
                        new
                        {
                            Id = 76,
                            ConcurrencyStamp = "e209954f-8996-43b3-a7ab-d05d36b1da17",
                            Name = "Treatment.Create",
                            NormalizedName = "TREATMENT.CREATE"
                        },
                        new
                        {
                            Id = 77,
                            ConcurrencyStamp = "a8f9a7ed-e146-440a-bf3a-fdd98d1f0438",
                            Name = "Treatment.Update",
                            NormalizedName = "TREATMENT.UPDATE"
                        },
                        new
                        {
                            Id = 78,
                            ConcurrencyStamp = "fdc8d64c-4db6-4c45-9d0a-fc90aa949d9c",
                            Name = "Treatment.Delete",
                            NormalizedName = "TREATMENT.DELETE"
                        },
                        new
                        {
                            Id = 79,
                            ConcurrencyStamp = "0e4d7be0-7b52-4527-8384-6cedebfe7eb7",
                            Name = "TreatmentStatu.Read",
                            NormalizedName = "TREATMENTSTATU.READ"
                        },
                        new
                        {
                            Id = 80,
                            ConcurrencyStamp = "7ff3ca55-dd98-443e-bb9a-3a569e652457",
                            Name = "TreatmentStatu.Create",
                            NormalizedName = "TREATMENTSTATU.CREATE"
                        },
                        new
                        {
                            Id = 81,
                            ConcurrencyStamp = "a3f88244-e81c-4e33-a146-ecd5c436ce72",
                            Name = "TreatmentStatu.Update",
                            NormalizedName = "TREATMENTSTATU.UPDATE"
                        },
                        new
                        {
                            Id = 82,
                            ConcurrencyStamp = "a28700dc-e2c0-4062-811e-f8f83a9aaf3e",
                            Name = "TreatmentStatu.Delete",
                            NormalizedName = "TREATMENTSTATU.DELETE"
                        },
                        new
                        {
                            Id = 83,
                            ConcurrencyStamp = "4c348a2a-cfc4-4440-9fbe-74d27c6b0845",
                            Name = "Patient.Read",
                            NormalizedName = "PATIENT.READ"
                        },
                        new
                        {
                            Id = 84,
                            ConcurrencyStamp = "b0d37a1a-294c-4d59-b52a-9d7b41095f8f",
                            Name = "Patient.Create",
                            NormalizedName = "PATIENT.CREATE"
                        },
                        new
                        {
                            Id = 85,
                            ConcurrencyStamp = "058c891f-a794-4363-a902-e27cbb672724",
                            Name = "Patient.Update",
                            NormalizedName = "PATIENT.UPDATE"
                        },
                        new
                        {
                            Id = 86,
                            ConcurrencyStamp = "dab889ed-09d0-464e-8b1b-3a1ec6100080",
                            Name = "Patient.Delete",
                            NormalizedName = "PATIENT.DELETE"
                        },
                        new
                        {
                            Id = 87,
                            ConcurrencyStamp = "8c9c5da2-f095-439e-b1a7-b8c81c316d66",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 88,
                            ConcurrencyStamp = "a2237e9d-790e-4fd4-adb1-cd87ea120500",
                            Name = "Sekreter",
                            NormalizedName = "SEKRETER"
                        },
                        new
                        {
                            Id = 89,
                            ConcurrencyStamp = "69cb6517-a4b4-4690-b7ff-dfffe364d736",
                            Name = "Estetisyen",
                            NormalizedName = "ESTETISYEN"
                        },
                        new
                        {
                            Id = 90,
                            ConcurrencyStamp = "22372f97-aa56-4d29-917b-f04da7f4a931",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        },
                        new
                        {
                            Id = 91,
                            ConcurrencyStamp = "a852cab4-cdc5-4839-8f50-eeead7e0fbb3",
                            Name = "Ürün Oku",
                            NormalizedName = "ÜRÜN OKU"
                        },
                        new
                        {
                            Id = 92,
                            ConcurrencyStamp = "9329db76-5609-4147-bd34-067d0c22a548",
                            Name = "Ürün Oluştur",
                            NormalizedName = "ÜRÜN OLUŞTUR"
                        },
                        new
                        {
                            Id = 93,
                            ConcurrencyStamp = "e18199da-e6e6-433c-88aa-f33ba938cfbb",
                            Name = "Ürün Güncelle",
                            NormalizedName = "ÜRÜN GÜNCELLE"
                        },
                        new
                        {
                            Id = 94,
                            ConcurrencyStamp = "b5d00603-5772-40fc-882b-f85c0400bea3",
                            Name = "Ürün Sil",
                            NormalizedName = "ÜRÜN SIL"
                        },
                        new
                        {
                            Id = 95,
                            ConcurrencyStamp = "7a945891-55a9-4716-a830-ca788ab34f10",
                            Name = "Stok Oku",
                            NormalizedName = "STOK OKU"
                        },
                        new
                        {
                            Id = 96,
                            ConcurrencyStamp = "bfccf5a2-ea27-437e-9266-1047dd04e9bf",
                            Name = "Stok Oluştur",
                            NormalizedName = "STOK OLUŞTUR"
                        },
                        new
                        {
                            Id = 97,
                            ConcurrencyStamp = "80cfe13c-796b-4e50-b363-a7833cee3c4d",
                            Name = "Stok Güncelle",
                            NormalizedName = "STOK GÜNCELLE"
                        },
                        new
                        {
                            Id = 98,
                            ConcurrencyStamp = "7e835e3f-40a7-419c-96cf-d43d74e3256a",
                            Name = "Stok Sil",
                            NormalizedName = "STOK SIL"
                        },
                        new
                        {
                            Id = 99,
                            ConcurrencyStamp = "a71a4ce1-9aa7-4a70-82a6-07a65092a7e3",
                            Name = "Şube Oku",
                            NormalizedName = "ŞUBE OKU"
                        },
                        new
                        {
                            Id = 100,
                            ConcurrencyStamp = "8c5a76b7-dd84-404f-b0c5-9642f75321b6",
                            Name = "Şube Oluştur",
                            NormalizedName = "ŞUBE OLUŞTUR"
                        },
                        new
                        {
                            Id = 101,
                            ConcurrencyStamp = "43f95bf5-25a9-4ca9-a778-dcdf3655f7ab",
                            Name = "Şube Güncelle",
                            NormalizedName = "ŞUBE GÜNCELLE"
                        },
                        new
                        {
                            Id = 102,
                            ConcurrencyStamp = "0f8f7e7b-5f0a-486f-b4cb-d5088ac16c77",
                            Name = "Şube Sil",
                            NormalizedName = "ŞUBE SIL"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("About")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacebookLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GitHubLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InstagramLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDentist")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LinkedInLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WebsiteLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("YoutubeLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Super Admin  User Abdullah",
                            AccessFailedCount = 0,
                            Color = "",
                            ConcurrencyStamp = "68b19b14-e76c-4fa3-a625-cb9174d79eda",
                            Email = "adminuserabdullah@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Super Admin Abdullah",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = false,
                            LastName = "User",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMINABDULLAH@GMAIL.COM",
                            NormalizedUserName = "SUPERADMINABDULLAH",
                            PasswordHash = "AQAAAAEAACcQAAAAELPrBOeIWUY41IuU87JTM+Jy0MZ0HZhzIirgd/3QzuZ/mAFviZYbR87/cz/TJK0ECw==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "a36a0faa-be4d-4e95-94c9-98c9b78609b3",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "adminuserabdullah",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 2,
                            About = "Admin User of ProgrammersBlog",
                            AccessFailedCount = 0,
                            Color = "",
                            ConcurrencyStamp = "53b7d8f3-150d-4c9d-b68a-1980ed5852fa",
                            Email = "adminuser1@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/editoruser",
                            FirstName = "Admin",
                            GitHubLink = "https://github.com/editoruser",
                            InstagramLink = "https://instagram.com/editoruser",
                            IsDentist = false,
                            LastName = "User",
                            LinkedInLink = "https://linkedin.com/editoruser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINUSER1@GMAIL.COM",
                            NormalizedUserName = "ADMINUSER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEByodIbwoLSSMTurgXkHv6i8dMiHJQB6OuZMrgB1WYD9z8u64/HUU1UXd6Hk2XaA7g==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "c4c1c2cb-951c-46b3-8895-0f36f5b285ec",
                            TwitterLink = "https://twitter.com/editoruser",
                            TwoFactorEnabled = false,
                            UserName = "adminuser1",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/editoruser"
                        },
                        new
                        {
                            Id = 3,
                            About = "Admin User of ProgrammersBlog",
                            AccessFailedCount = 0,
                            Color = "",
                            ConcurrencyStamp = "8a04f240-d499-43ca-9533-916cf54f8028",
                            Email = "adminuser2@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/editoruser",
                            FirstName = "Admin",
                            GitHubLink = "https://github.com/editoruser",
                            InstagramLink = "https://instagram.com/editoruser",
                            IsDentist = false,
                            LastName = "User",
                            LinkedInLink = "https://linkedin.com/editoruser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINUSER2@GMAIL.COM",
                            NormalizedUserName = "ADMINUSER2",
                            PasswordHash = "AQAAAAEAACcQAAAAECq2p2ZT32U9eFbS2quNiiBFVUru9pi7gRatDd3NLzgvI7rF0AaURdPBMUjSQa54IA==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "3de716ea-708b-43b1-bb53-90a05edf2e27",
                            TwitterLink = "https://twitter.com/editoruser",
                            TwoFactorEnabled = false,
                            UserName = "adminuser2",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/editoruser"
                        },
                        new
                        {
                            Id = 5,
                            About = "Secretary User  of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "",
                            ConcurrencyStamp = "c521c9df-ed70-40ba-b54e-c4d84124786c",
                            Email = "secretaryuser@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Secretary",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = false,
                            LastName = "User",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "SECRETARYUSER@GMAIL.COM",
                            NormalizedUserName = "SECRETARYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEB1tfw8loVS1Op7OHkc1lMzei0xq/37ChbP9nxTL4puqk5NNMK+MUNtRPNSJpaxK/Q==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "c52edf27-0cdc-4cf0-b033-297c347c370c",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "secretaryuser",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 4,
                            About = "Editor User of ProgrammersBlog",
                            AccessFailedCount = 0,
                            Color = "",
                            ConcurrencyStamp = "c4ca7baf-86fb-4c5e-a04b-22ea09984060",
                            Email = "editorUser@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/editoruser",
                            FirstName = "Editor",
                            GitHubLink = "https://github.com/editoruser",
                            InstagramLink = "https://instagram.com/editoruser",
                            IsDentist = false,
                            LastName = "User",
                            LinkedInLink = "https://linkedin.com/editoruser",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDITORUSER@GMAIL.COM",
                            NormalizedUserName = "EDITORUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEEElm7I+bKnmI377zquTd5pGXN3t0fTIbM66kYs+nDLVbCYmrPW57GuknlD298xNtw==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "13858640-c84e-4147-8e60-21824ae564c4",
                            TwitterLink = "https://twitter.com/editoruser",
                            TwoFactorEnabled = false,
                            UserName = "editorUser",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/editoruser"
                        },
                        new
                        {
                            Id = 6,
                            About = "Estetisyen User 1 of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "red",
                            ConcurrencyStamp = "a9752adb-f5cd-4b82-8331-68d46b3e9e0f",
                            Email = "estetisyenuser1@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Estetisyen",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = true,
                            LastName = "User 1",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTETISYENUSER1@GMAIL.COM",
                            NormalizedUserName = "ESTETISYENUSER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEAWO5e4TOtBrfT0V0j/hb9wCZT/ADL1CaqoHxh2iY9mIrcAKW08qyvrk53t4EfgSkQ==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "111aee15-4bea-4092-821a-505605033bbd",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "estetisyenuser1",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 7,
                            About = "Estetisyen User 2 of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "blue",
                            ConcurrencyStamp = "82f8ce70-6677-44e1-890c-8f151338356b",
                            Email = "estetisyenuser2@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Estetisyen",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = true,
                            LastName = "User 2",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTETISYENUSER2@GMAIL.COM",
                            NormalizedUserName = "ESTETISYENUSER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEOPkzk4jJrqrMe3gSvgoO4HZwUSvb4yh3w1T1Jl3m/0IGL0BuHo5Hw7vvDzzO/5zGQ==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "3fc7e7db-aa40-44fd-a1b0-e6d618827345",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "estetisyenuser2",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 8,
                            About = "Estetisyen User 3 of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "orange",
                            ConcurrencyStamp = "296be42e-b2a5-4e93-8646-e60af3078314",
                            Email = "estetisyenuser3@gmail.com",
                            EmailConfirmed = true,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Estetisyen3",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = true,
                            LastName = "User 3",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTETISUYENUSER3@GMAIL.COM",
                            NormalizedUserName = "ESTETISYENUSER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEMm0bxejIF7U8ddsw3LPj5Ny3+/+gZI/czRjOSOHOLDiZj0V7PLaACvF5HzRmLViGg==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "dccf2441-40c6-4fdb-a981-c3ecada5d420",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "estetisyenuser3",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 9,
                            About = "Estetisyen User 4 of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "purple",
                            ConcurrencyStamp = "7ca97ce2-1a8d-464b-bd6b-8ad4203aba26",
                            Email = "estetisyenuser4@gmail.com",
                            EmailConfirmed = false,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "Estetisyen4",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = true,
                            LastName = "User 4",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTETISYENUSER4@GMAIL.COM",
                            NormalizedUserName = "ESTETISYENUSER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEOqKUtOuWuoYjOtRuxvQrrNEkp2bF/sJKQdB86Rpfc8ok+j8C+yLY7kT24BgT8/pcA==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "b9dc5e09-3788-4079-8a7d-df06ef9419f8",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "estetisyenuser4",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        },
                        new
                        {
                            Id = 10,
                            About = "Estetisyen User 5 of TigrisTech Blog",
                            AccessFailedCount = 0,
                            Color = "grey",
                            ConcurrencyStamp = "1fc8bfa4-6e4b-4bce-960e-7b5daeefebde",
                            Email = "estetisyenuser5@gmail.com",
                            EmailConfirmed = false,
                            FacebookLink = "https://facebook.com/adminuser",
                            FirstName = "ESTETISYEN5",
                            GitHubLink = "https://github.com/adminuser",
                            InstagramLink = "https://instagram.com/adminuser",
                            IsDentist = true,
                            LastName = "User 5",
                            LinkedInLink = "https://linkedin.com/adminuser",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTETISYENUSER5@GMAIL.COM",
                            NormalizedUserName = "ESTETISYENUSER5",
                            PasswordHash = "AQAAAAEAACcQAAAAEMdPwtCWkZGBGdGVX4x2Wy//NODhHzPRD2z3EmL1T85OSUB/sjKQGj56h8LkuhZ0jw==",
                            PhoneNumber = "+905555555555",
                            PhoneNumberConfirmed = true,
                            Picture = "/userImages/defaultUser.png",
                            SecurityStamp = "180f943d-9ea0-4b9e-9071-3b4b94664827",
                            TwitterLink = "https://twitter.com/adminuser",
                            TwoFactorEnabled = false,
                            UserName = "estetisyenuser5",
                            WebsiteLink = "https://programmersblog.com/",
                            YoutubeLink = "https://youtube.com/adminuser"
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 4
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 5
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 6
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 7
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 8
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 9
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 10
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 11
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 12
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 13
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 14
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 15
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 16
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 17
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 18
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 19
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 20
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 22
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 23
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 24
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 25
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 26
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 27
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 28
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 29
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 30
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 31
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 32
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 33
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 34
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 35
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 36
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 37
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 38
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 43
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 44
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 45
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 46
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 47
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 48
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 49
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 50
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 51
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 52
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 53
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 54
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 55
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 56
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 57
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 58
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 63
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 64
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 65
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 66
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 87
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 88
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 89
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 90
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 91
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 92
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 93
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 94
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 95
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 96
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 97
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 98
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 99
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 100
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 101
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 102
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 35
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 36
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 37
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 38
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 43
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 44
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 45
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 46
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 47
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 48
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 49
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 50
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 51
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 52
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 53
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 54
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 55
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 56
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 57
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 58
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 63
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 64
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 65
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 66
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 87
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 88
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 89
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 91
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 92
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 93
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 94
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 95
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 96
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 97
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 98
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 99
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 100
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 101
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 102
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 35
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 36
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 37
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 38
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 43
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 44
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 45
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 46
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 47
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 48
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 49
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 50
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 51
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 52
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 53
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 54
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 55
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 56
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 57
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 58
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 63
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 64
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 65
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 66
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 87
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 88
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 89
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 91
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 92
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 93
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 94
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 95
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 96
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 97
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 98
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 99
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 100
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 101
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 102
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 4
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 5
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 6
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 7
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 8
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 17
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 18
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 19
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 20
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 23
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 24
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 25
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 26
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 27
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 28
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 29
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 30
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 31
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 32
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 33
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 34
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 90
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 35
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 36
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 37
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 38
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 43
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 44
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 45
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 46
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 47
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 48
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 49
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 50
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 51
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 52
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 53
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 54
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 55
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 56
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 57
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 58
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 63
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 64
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 65
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 66
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 88
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 86
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 21
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 39
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 40
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 41
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 42
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 59
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 60
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 61
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 62
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 67
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 68
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 69
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 70
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 71
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 72
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 73
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 74
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 75
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 76
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 77
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 78
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 79
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 80
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 81
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 82
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 83
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 84
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 85
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 86
                        });
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Article", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.Blog.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Comment", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.Blog.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.RoleClaim", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserClaim", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserLogin", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserRole", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.UserToken", b =>
                {
                    b.HasOne("TigrisTech.Entities.Concrete.UserTable.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.Blog.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("TigrisTech.Entities.Concrete.UserTable.User", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
